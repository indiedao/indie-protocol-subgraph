// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Claimed extends ethereum.Event {
  get params(): Claimed__Params {
    return new Claimed__Params(this);
  }
}

export class Claimed__Params {
  _event: Claimed;

  constructor(event: Claimed) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DefaultWithholdingPercentageChanged extends ethereum.Event {
  get params(): DefaultWithholdingPercentageChanged__Params {
    return new DefaultWithholdingPercentageChanged__Params(this);
  }
}

export class DefaultWithholdingPercentageChanged__Params {
  _event: DefaultWithholdingPercentageChanged;

  constructor(event: DefaultWithholdingPercentageChanged) {
    this._event = event;
  }

  get previousPercentage(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get percentage(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ETHWithdrawn extends ethereum.Event {
  get params(): ETHWithdrawn__Params {
    return new ETHWithdrawn__Params(this);
  }
}

export class ETHWithdrawn__Params {
  _event: ETHWithdrawn;

  constructor(event: ETHWithdrawn) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class MemberStatusActive extends ethereum.Event {
  get params(): MemberStatusActive__Params {
    return new MemberStatusActive__Params(this);
  }
}

export class MemberStatusActive__Params {
  _event: MemberStatusActive;

  constructor(event: MemberStatusActive) {
    this._event = event;
  }

  get memberAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MemberStatusInactive extends ethereum.Event {
  get params(): MemberStatusInactive__Params {
    return new MemberStatusInactive__Params(this);
  }
}

export class MemberStatusInactive__Params {
  _event: MemberStatusInactive;

  constructor(event: MemberStatusInactive) {
    this._event = event;
  }

  get memberAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MemberStatusResigned extends ethereum.Event {
  get params(): MemberStatusResigned__Params {
    return new MemberStatusResigned__Params(this);
  }
}

export class MemberStatusResigned__Params {
  _event: MemberStatusResigned;

  constructor(event: MemberStatusResigned) {
    this._event = event;
  }

  get memberAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MemberStatusTerminated extends ethereum.Event {
  get params(): MemberStatusTerminated__Params {
    return new MemberStatusTerminated__Params(this);
  }
}

export class MemberStatusTerminated__Params {
  _event: MemberStatusTerminated;

  constructor(event: MemberStatusTerminated) {
    this._event = event;
  }

  get memberAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MemberWithholdingPercentageChanged extends ethereum.Event {
  get params(): MemberWithholdingPercentageChanged__Params {
    return new MemberWithholdingPercentageChanged__Params(this);
  }
}

export class MemberWithholdingPercentageChanged__Params {
  _event: MemberWithholdingPercentageChanged;

  constructor(event: MemberWithholdingPercentageChanged) {
    this._event = event;
  }

  get memberAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get percentage(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MembershipMerkleRootChanged extends ethereum.Event {
  get params(): MembershipMerkleRootChanged__Params {
    return new MembershipMerkleRootChanged__Params(this);
  }
}

export class MembershipMerkleRootChanged__Params {
  _event: MembershipMerkleRootChanged;

  constructor(event: MembershipMerkleRootChanged) {
    this._event = event;
  }

  get previousMerkleRoot(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get merkleRoot(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class OwnershipRenounced extends ethereum.Event {
  get params(): OwnershipRenounced__Params {
    return new OwnershipRenounced__Params(this);
  }
}

export class OwnershipRenounced__Params {
  _event: OwnershipRenounced;

  constructor(event: OwnershipRenounced) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class SeasonalDividend extends ethereum.Event {
  get params(): SeasonalDividend__Params {
    return new SeasonalDividend__Params(this);
  }
}

export class SeasonalDividend__Params {
  _event: SeasonalDividend;

  constructor(event: SeasonalDividend) {
    this._event = event;
  }

  get seasonId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get totalDividend(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get totalWithholding(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SeasonalMemberClaimedDividend extends ethereum.Event {
  get params(): SeasonalMemberClaimedDividend__Params {
    return new SeasonalMemberClaimedDividend__Params(this);
  }
}

export class SeasonalMemberClaimedDividend__Params {
  _event: SeasonalMemberClaimedDividend;

  constructor(event: SeasonalMemberClaimedDividend) {
    this._event = event;
  }

  get seasonId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get memberAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get netDividend(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SeasonalMemberDividend extends ethereum.Event {
  get params(): SeasonalMemberDividend__Params {
    return new SeasonalMemberDividend__Params(this);
  }
}

export class SeasonalMemberDividend__Params {
  _event: SeasonalMemberDividend;

  constructor(event: SeasonalMemberDividend) {
    this._event = event;
  }

  get seasonId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get memberAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get netDividend(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get withholding(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TerminatedMemberDividendsReturnedToTreasury extends ethereum.Event {
  get params(): TerminatedMemberDividendsReturnedToTreasury__Params {
    return new TerminatedMemberDividendsReturnedToTreasury__Params(this);
  }
}

export class TerminatedMemberDividendsReturnedToTreasury__Params {
  _event: TerminatedMemberDividendsReturnedToTreasury;

  constructor(event: TerminatedMemberDividendsReturnedToTreasury) {
    this._event = event;
  }

  get memberAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TreasuryAddressChanged extends ethereum.Event {
  get params(): TreasuryAddressChanged__Params {
    return new TreasuryAddressChanged__Params(this);
  }
}

export class TreasuryAddressChanged__Params {
  _event: TreasuryAddressChanged;

  constructor(event: TreasuryAddressChanged) {
    this._event = event;
  }

  get previousAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class USDCWithdrawn extends ethereum.Event {
  get params(): USDCWithdrawn__Params {
    return new USDCWithdrawn__Params(this);
  }
}

export class USDCWithdrawn__Params {
  _event: USDCWithdrawn;

  constructor(event: USDCWithdrawn) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class WithholdingAddressChanged extends ethereum.Event {
  get params(): WithholdingAddressChanged__Params {
    return new WithholdingAddressChanged__Params(this);
  }
}

export class WithholdingAddressChanged__Params {
  _event: WithholdingAddressChanged;

  constructor(event: WithholdingAddressChanged) {
    this._event = event;
  }

  get previousAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class IndieToken extends ethereum.SmartContract {
  static bind(address: Address): IndieToken {
    return new IndieToken("IndieToken", address);
  }

  ADMIN_ROLE(): Bytes {
    let result = super.call("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  OWNER_ROLE(): Bytes {
    let result = super.call("OWNER_ROLE", "OWNER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OWNER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("OWNER_ROLE", "OWNER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  allowance(owner: Address, spender: Address): BigInt {
    let result = super.call(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );

    return result[0].toBigInt();
  }

  try_allowance(owner: Address, spender: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  approve(spender: Address, amount: BigInt): boolean {
    let result = super.call("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_approve(spender: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balanceOf(account: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  decreaseAllowance(spender: Address, subtractedValue: BigInt): boolean {
    let result = super.call(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(subtractedValue)
      ]
    );

    return result[0].toBoolean();
  }

  try_decreaseAllowance(
    spender: Address,
    subtractedValue: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(subtractedValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  dividendsBySeason(param0: BigInt): BigInt {
    let result = super.call(
      "dividendsBySeason",
      "dividendsBySeason(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_dividendsBySeason(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "dividendsBySeason",
      "dividendsBySeason(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  dividendsHeldBySeasonByMember(
    seasonId: BigInt,
    memberAddress: Address
  ): BigInt {
    let result = super.call(
      "dividendsHeldBySeasonByMember",
      "dividendsHeldBySeasonByMember(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(seasonId),
        ethereum.Value.fromAddress(memberAddress)
      ]
    );

    return result[0].toBigInt();
  }

  try_dividendsHeldBySeasonByMember(
    seasonId: BigInt,
    memberAddress: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "dividendsHeldBySeasonByMember",
      "dividendsHeldBySeasonByMember(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(seasonId),
        ethereum.Value.fromAddress(memberAddress)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDefaultWithholdingPercentage(): BigInt {
    let result = super.call(
      "getDefaultWithholdingPercentage",
      "getDefaultWithholdingPercentage():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getDefaultWithholdingPercentage(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDefaultWithholdingPercentage",
      "getDefaultWithholdingPercentage():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMembershipMerkleRoot(): Bytes {
    let result = super.call(
      "getMembershipMerkleRoot",
      "getMembershipMerkleRoot():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_getMembershipMerkleRoot(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getMembershipMerkleRoot",
      "getMembershipMerkleRoot():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getMostRecentSeason(): BigInt {
    let result = super.call(
      "getMostRecentSeason",
      "getMostRecentSeason():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getMostRecentSeason(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMostRecentSeason",
      "getMostRecentSeason():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getUnallocatedDividends(): BigInt {
    let result = super.call(
      "getUnallocatedDividends",
      "getUnallocatedDividends():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getUnallocatedDividends(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUnallocatedDividends",
      "getUnallocatedDividends():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUnclaimedDividends(): BigInt {
    let result = super.call(
      "getUnclaimedDividends",
      "getUnclaimedDividends():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getUnclaimedDividends(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUnclaimedDividends",
      "getUnclaimedDividends():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  increaseAllowance(spender: Address, addedValue: BigInt): boolean {
    let result = super.call(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue)
      ]
    );

    return result[0].toBoolean();
  }

  try_increaseAllowance(
    spender: Address,
    addedValue: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxSupply(): BigInt {
    let result = super.call("maxSupply", "maxSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxSupply", "maxSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minorVersion(): BigInt {
    let result = super.call("minorVersion", "minorVersion():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minorVersion(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minorVersion", "minorVersion():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  remainingSupply(): BigInt {
    let result = super.call(
      "remainingSupply",
      "remainingSupply():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_remainingSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "remainingSupply",
      "remainingSupply():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  statusByIndie(param0: Address): i32 {
    let result = super.call("statusByIndie", "statusByIndie(address):(uint8)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toI32();
  }

  try_statusByIndie(param0: Address): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "statusByIndie",
      "statusByIndie(address):(uint8)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transfer(to: Address, amount: BigInt): boolean {
    let result = super.call("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(to),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_transfer(to: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(to),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(from: Address, to: Address, amount: BigInt): boolean {
    let result = super.call(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromAddress(to),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_transferFrom(
    from: Address,
    to: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromAddress(to),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  treasuryAddress(): Address {
    let result = super.call(
      "treasuryAddress",
      "treasuryAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_treasuryAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "treasuryAddress",
      "treasuryAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  usdc(): Address {
    let result = super.call("usdc", "usdc():(address)", []);

    return result[0].toAddress();
  }

  try_usdc(): ethereum.CallResult<Address> {
    let result = super.tryCall("usdc", "usdc():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  votingBalanceOf(account: Address): BigInt {
    let result = super.call(
      "votingBalanceOf",
      "votingBalanceOf(address):(uint256)",
      [ethereum.Value.fromAddress(account)]
    );

    return result[0].toBigInt();
  }

  try_votingBalanceOf(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "votingBalanceOf",
      "votingBalanceOf(address):(uint256)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withholdingAddress(): Address {
    let result = super.call(
      "withholdingAddress",
      "withholdingAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_withholdingAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "withholdingAddress",
      "withholdingAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  withholdingPercentageByIndie(param0: Address): BigInt {
    let result = super.call(
      "withholdingPercentageByIndie",
      "withholdingPercentageByIndie(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_withholdingPercentageByIndie(
    param0: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withholdingPercentageByIndie",
      "withholdingPercentageByIndie(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class BatchMintCall extends ethereum.Call {
  get inputs(): BatchMintCall__Inputs {
    return new BatchMintCall__Inputs(this);
  }

  get outputs(): BatchMintCall__Outputs {
    return new BatchMintCall__Outputs(this);
  }
}

export class BatchMintCall__Inputs {
  _call: BatchMintCall;

  constructor(call: BatchMintCall) {
    this._call = call;
  }

  get memberAddresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class BatchMintCall__Outputs {
  _call: BatchMintCall;

  constructor(call: BatchMintCall) {
    this._call = call;
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }
}

export class BurnFromCall extends ethereum.Call {
  get inputs(): BurnFromCall__Inputs {
    return new BurnFromCall__Inputs(this);
  }

  get outputs(): BurnFromCall__Outputs {
    return new BurnFromCall__Outputs(this);
  }
}

export class BurnFromCall__Inputs {
  _call: BurnFromCall;

  constructor(call: BurnFromCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BurnFromCall__Outputs {
  _call: BurnFromCall;

  constructor(call: BurnFromCall) {
    this._call = call;
  }
}

export class ClaimDividendsForSeasonCall extends ethereum.Call {
  get inputs(): ClaimDividendsForSeasonCall__Inputs {
    return new ClaimDividendsForSeasonCall__Inputs(this);
  }

  get outputs(): ClaimDividendsForSeasonCall__Outputs {
    return new ClaimDividendsForSeasonCall__Outputs(this);
  }
}

export class ClaimDividendsForSeasonCall__Inputs {
  _call: ClaimDividendsForSeasonCall;

  constructor(call: ClaimDividendsForSeasonCall) {
    this._call = call;
  }

  get seasonId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimDividendsForSeasonCall__Outputs {
  _call: ClaimDividendsForSeasonCall;

  constructor(call: ClaimDividendsForSeasonCall) {
    this._call = call;
  }
}

export class ClaimMembershipCall extends ethereum.Call {
  get inputs(): ClaimMembershipCall__Inputs {
    return new ClaimMembershipCall__Inputs(this);
  }

  get outputs(): ClaimMembershipCall__Outputs {
    return new ClaimMembershipCall__Outputs(this);
  }
}

export class ClaimMembershipCall__Inputs {
  _call: ClaimMembershipCall;

  constructor(call: ClaimMembershipCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get proof(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }
}

export class ClaimMembershipCall__Outputs {
  _call: ClaimMembershipCall;

  constructor(call: ClaimMembershipCall) {
    this._call = call;
  }
}

export class CreateSeasonSnapshotCall extends ethereum.Call {
  get inputs(): CreateSeasonSnapshotCall__Inputs {
    return new CreateSeasonSnapshotCall__Inputs(this);
  }

  get outputs(): CreateSeasonSnapshotCall__Outputs {
    return new CreateSeasonSnapshotCall__Outputs(this);
  }
}

export class CreateSeasonSnapshotCall__Inputs {
  _call: CreateSeasonSnapshotCall;

  constructor(call: CreateSeasonSnapshotCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get memberAddresses(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class CreateSeasonSnapshotCall__Outputs {
  _call: CreateSeasonSnapshotCall;

  constructor(call: CreateSeasonSnapshotCall) {
    this._call = call;
  }
}

export class DecreaseAllowanceCall extends ethereum.Call {
  get inputs(): DecreaseAllowanceCall__Inputs {
    return new DecreaseAllowanceCall__Inputs(this);
  }

  get outputs(): DecreaseAllowanceCall__Outputs {
    return new DecreaseAllowanceCall__Outputs(this);
  }
}

export class DecreaseAllowanceCall__Inputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get subtractedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseAllowanceCall__Outputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class IncreaseAllowanceCall extends ethereum.Call {
  get inputs(): IncreaseAllowanceCall__Inputs {
    return new IncreaseAllowanceCall__Inputs(this);
  }

  get outputs(): IncreaseAllowanceCall__Outputs {
    return new IncreaseAllowanceCall__Outputs(this);
  }
}

export class IncreaseAllowanceCall__Inputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get addedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseAllowanceCall__Outputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get owner_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get admin_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get treasuryAddress_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get withholdingAddress_(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get usdc_(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class ResignCall extends ethereum.Call {
  get inputs(): ResignCall__Inputs {
    return new ResignCall__Inputs(this);
  }

  get outputs(): ResignCall__Outputs {
    return new ResignCall__Outputs(this);
  }
}

export class ResignCall__Inputs {
  _call: ResignCall;

  constructor(call: ResignCall) {
    this._call = call;
  }
}

export class ResignCall__Outputs {
  _call: ResignCall;

  constructor(call: ResignCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetDefaultWithholdingPercentageCall extends ethereum.Call {
  get inputs(): SetDefaultWithholdingPercentageCall__Inputs {
    return new SetDefaultWithholdingPercentageCall__Inputs(this);
  }

  get outputs(): SetDefaultWithholdingPercentageCall__Outputs {
    return new SetDefaultWithholdingPercentageCall__Outputs(this);
  }
}

export class SetDefaultWithholdingPercentageCall__Inputs {
  _call: SetDefaultWithholdingPercentageCall;

  constructor(call: SetDefaultWithholdingPercentageCall) {
    this._call = call;
  }

  get percentage(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDefaultWithholdingPercentageCall__Outputs {
  _call: SetDefaultWithholdingPercentageCall;

  constructor(call: SetDefaultWithholdingPercentageCall) {
    this._call = call;
  }
}

export class SetIndieMemberStatusesCall extends ethereum.Call {
  get inputs(): SetIndieMemberStatusesCall__Inputs {
    return new SetIndieMemberStatusesCall__Inputs(this);
  }

  get outputs(): SetIndieMemberStatusesCall__Outputs {
    return new SetIndieMemberStatusesCall__Outputs(this);
  }
}

export class SetIndieMemberStatusesCall__Inputs {
  _call: SetIndieMemberStatusesCall;

  constructor(call: SetIndieMemberStatusesCall) {
    this._call = call;
  }

  get memberAddresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get statuses(): Array<i32> {
    return this._call.inputValues[1].value.toI32Array();
  }
}

export class SetIndieMemberStatusesCall__Outputs {
  _call: SetIndieMemberStatusesCall;

  constructor(call: SetIndieMemberStatusesCall) {
    this._call = call;
  }
}

export class SetIndieWithholdingPercentagesCall extends ethereum.Call {
  get inputs(): SetIndieWithholdingPercentagesCall__Inputs {
    return new SetIndieWithholdingPercentagesCall__Inputs(this);
  }

  get outputs(): SetIndieWithholdingPercentagesCall__Outputs {
    return new SetIndieWithholdingPercentagesCall__Outputs(this);
  }
}

export class SetIndieWithholdingPercentagesCall__Inputs {
  _call: SetIndieWithholdingPercentagesCall;

  constructor(call: SetIndieWithholdingPercentagesCall) {
    this._call = call;
  }

  get memberAddresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get percentages(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SetIndieWithholdingPercentagesCall__Outputs {
  _call: SetIndieWithholdingPercentagesCall;

  constructor(call: SetIndieWithholdingPercentagesCall) {
    this._call = call;
  }
}

export class SetMembershipMerkleRootCall extends ethereum.Call {
  get inputs(): SetMembershipMerkleRootCall__Inputs {
    return new SetMembershipMerkleRootCall__Inputs(this);
  }

  get outputs(): SetMembershipMerkleRootCall__Outputs {
    return new SetMembershipMerkleRootCall__Outputs(this);
  }
}

export class SetMembershipMerkleRootCall__Inputs {
  _call: SetMembershipMerkleRootCall;

  constructor(call: SetMembershipMerkleRootCall) {
    this._call = call;
  }

  get merkleRoot(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetMembershipMerkleRootCall__Outputs {
  _call: SetMembershipMerkleRootCall;

  constructor(call: SetMembershipMerkleRootCall) {
    this._call = call;
  }
}

export class SetTreasuryAddressCall extends ethereum.Call {
  get inputs(): SetTreasuryAddressCall__Inputs {
    return new SetTreasuryAddressCall__Inputs(this);
  }

  get outputs(): SetTreasuryAddressCall__Outputs {
    return new SetTreasuryAddressCall__Outputs(this);
  }
}

export class SetTreasuryAddressCall__Inputs {
  _call: SetTreasuryAddressCall;

  constructor(call: SetTreasuryAddressCall) {
    this._call = call;
  }

  get newTreasuryAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTreasuryAddressCall__Outputs {
  _call: SetTreasuryAddressCall;

  constructor(call: SetTreasuryAddressCall) {
    this._call = call;
  }
}

export class SetWithholdingAddressCall extends ethereum.Call {
  get inputs(): SetWithholdingAddressCall__Inputs {
    return new SetWithholdingAddressCall__Inputs(this);
  }

  get outputs(): SetWithholdingAddressCall__Outputs {
    return new SetWithholdingAddressCall__Outputs(this);
  }
}

export class SetWithholdingAddressCall__Inputs {
  _call: SetWithholdingAddressCall;

  constructor(call: SetWithholdingAddressCall) {
    this._call = call;
  }

  get newWithholdingAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWithholdingAddressCall__Outputs {
  _call: SetWithholdingAddressCall;

  constructor(call: SetWithholdingAddressCall) {
    this._call = call;
  }
}

export class TerminateCall extends ethereum.Call {
  get inputs(): TerminateCall__Inputs {
    return new TerminateCall__Inputs(this);
  }

  get outputs(): TerminateCall__Outputs {
    return new TerminateCall__Outputs(this);
  }
}

export class TerminateCall__Inputs {
  _call: TerminateCall;

  constructor(call: TerminateCall) {
    this._call = call;
  }

  get memberAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TerminateCall__Outputs {
  _call: TerminateCall;

  constructor(call: TerminateCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

export class WithdrawETHCall extends ethereum.Call {
  get inputs(): WithdrawETHCall__Inputs {
    return new WithdrawETHCall__Inputs(this);
  }

  get outputs(): WithdrawETHCall__Outputs {
    return new WithdrawETHCall__Outputs(this);
  }
}

export class WithdrawETHCall__Inputs {
  _call: WithdrawETHCall;

  constructor(call: WithdrawETHCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawETHCall__Outputs {
  _call: WithdrawETHCall;

  constructor(call: WithdrawETHCall) {
    this._call = call;
  }
}

export class WithdrawUSDCCall extends ethereum.Call {
  get inputs(): WithdrawUSDCCall__Inputs {
    return new WithdrawUSDCCall__Inputs(this);
  }

  get outputs(): WithdrawUSDCCall__Outputs {
    return new WithdrawUSDCCall__Outputs(this);
  }
}

export class WithdrawUSDCCall__Inputs {
  _call: WithdrawUSDCCall;

  constructor(call: WithdrawUSDCCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawUSDCCall__Outputs {
  _call: WithdrawUSDCCall;

  constructor(call: WithdrawUSDCCall) {
    this._call = call;
  }
}
